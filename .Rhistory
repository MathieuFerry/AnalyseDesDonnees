library("FactoMineR")
library("explor")
library(ggplot2)
library(readr)
library(factoextra)
library(dplyr)
library(tibble)
#| warning: false
library("FactoMineR")
library("explor")
library(ggplot2)
library(readr)
library(factoextra)
library(dplyr)
library(tibble)
#| warning: false
# Attribution du répertoire de travail : c'est l'emplacement physique oé se trouvent les jeux de données qui seront utilisés et crées
setwd("E:/Enseignements/Cours UVSQ/Année 2023-2024/L3 Sociologie Analyse des données/TD/TD6")
# AFC sur les résultats départementaux du premier tour des élections présidentielles
# Lecture du fichier csv.
tab<-read_csv(file="elections.csv",locale=locale(encoding="latin1"))
tab<-column_to_rownames(tab,var="Départements")
View(tab)
## Poids de chaque département
poids<-res.afc$call$marge.row
# Analyse factorielle des correspondances
res.afc<-CA(tab[,-1])
## Poids de chaque département
poids<-res.afc$call$marge.row
poids
# Analyse factorielle des correspondances
res.afc<-CA(tab[,-1],graph=F)
poids
vp<-res.afc$eig # On regarde lesquelles sont supérieures à l'inertie moyenne
vp[,1]>mean(vp[,1])
##Le scree plot des valeurs propres
fviz_eig(res.afc,addlabels=T,ncp =24)
##Le scree plot des valeurs propres
fviz_eig(res.afc,addlabels=T,ncp =10)
explor(res.afc)
##Visualiser la contribution des lignes et colonnes qui ont une contribution supérieure à la contribution moyenne sur l'axe 1.
rowcontrib1<-rownames(res.afc$row$contrib)[res.afc$row$contrib[,1]>100/nrow(tab1)]
##Visualiser la contribution des lignes et colonnes qui ont une contribution supérieure à la contribution moyenne sur l'axe 1.
rowcontrib1<-rownames(res.afc$row$contrib)[res.afc$row$contrib[,1]>100/nrow(tab)]
colcontrib1<-rownames(res.afc$col$contrib)[res.afc$col$contrib[,1]>100/ncol(tab)]
fviz_ca_biplot(res.afc,axes=c(1,2),
select.row = list(name = rowcontrib1),
select.col=list(name=colcontrib1))
fviz_ca_row(res.afc,axes=c(1,2),col.row = "cos2")
fviz_ca_col(res.afc,axes=c(1,2),col.col =  "cos2")
##Visualiser la contribution des lignes et colonnes qui ont une contribution supérieure à la contribution moyenne sur l'axe 2.
rowcontrib2<-rownames(res.afc$row$contrib)[res.afc$row$contrib[,2]>100/nrow(tab)]
colcontrib2<-rownames(res.afc$col$contrib)[res.afc$col$contrib[,2]>100/ncol(tab)]
fviz_ca_biplot(res.afc,axes=c(1,2),
select.row = list(name = rowcontrib2),
select.col=list(name=colcontrib2))
res.afc$col$cos2
res.afc$col$cos2[,1]
order(res.afc$col$cos2[,1])
sort(res.afc$col$cos2[,1])
?sort
sort(res.afc$col$cos2[,1],decreasing = T)
data.frame(sort(res.afc$col$cos2[,1],decreasing = T))
data.frame(Axe1_cos2=sort(res.afc$col$cos2[,1],decreasing = T))
fviz_ca_col(res.afc,axes=c(1,1),col.col =  "cos2")
data.frame(Axe1_cos2=sort(res.afc$col$cos2[,1],decreasing = T))
colcos1<-rownames(res.afc$col$cos2)[res.afc$col$cos2[,1]>.1]
fviz_ca_col(res.afc,axes=c(1,2),select.col=list(name=colcos1))
##Visualiser la contribution des lignes et colonnes qui ont une contribution supérieure à la contribution moyenne sur l'axe 2.
rowcontrib2<-rownames(res.afc$row$contrib)[res.afc$row$contrib[,2]>100/nrow(tab)]
colcontrib2<-rownames(res.afc$col$contrib)[res.afc$col$contrib[,2]>100/ncol(tab)]
fviz_ca_biplot(res.afc,axes=c(1,2),
select.row = list(name = rowcontrib2),
select.col=list(name=colcontrib2))
data.frame(Axe2_cos2=sort(res.afc$col$cos2[,2],decreasing = T))
colcos2<-rownames(res.afc$col$cos2)[res.afc$col$cos2[,2]>.1]
fviz_ca_col(res.afc,axes=c(1,2),select.col=list(name=colcos2))
explor(res.afc)
fviz_ca_row(res.afc,axes=c(1,2),col.row="contrib")
#La coloration des départements en fonction de la contribution correspond à la contribution moyenne sur les axes 1 et 2
?fviz_ca_row
fviz_ca_row(res.afc,axes=c(1,2),col.row="contrib",labelsize=1)
fviz_ca_row(res.afc,axes=c(1,2),col.row="contrib")
#La coloration des départements en fonction de la contribution correspond à la contribution moyenne sur les axes 1 et 2
explor(res.afc)
fviz_ca_row(res.afc,axes=c(1,2),col.row="contrib",labelsize=2)
fviz_ca_row(res.afc,axes=c(1,2),col.row="contrib",size=1,labelsize=2)
fviz_ca_row(res.afc,axes=c(1,2),col.row="contrib",pointsize=1,labelsize=2)
fviz_ca_row(res.afc,axes=c(1,2),col.row="contrib",pointsize=1,labelsize=3)
## Poids de chaque département
poids<-res.afc$call$marge.row
#| warning: false
library("FactoMineR")
library("explor")
library(ggplot2)
library(readr)
library(factoextra)
library(dplyr)
library(tibble)
#| warning: false
# Attribution du répertoire de travail : c'est l'emplacement physique oé se trouvent les jeux de données qui seront utilisés et crées
setwd("E:/Enseignements/Cours UVSQ/Année 2023-2024/L3 Sociologie Analyse des données/TD/TD6")
# AFC sur les résultats départementaux du premier tour des élections présidentielles
# Lecture du fichier csv.
tab<-read_csv(file="elections.csv",locale=locale(encoding="latin1"))
tab<-column_to_rownames(tab,var="Départements")
# Analyse factorielle des correspondances
res.afc<-CA(tab[,-1],graph=F)
vp<-res.afc$eig # On regarde lesquelles sont supérieures à l'inertie moyenne
vp[,1]>mean(vp[,1])
##Le scree plot des valeurs propres
fviz_eig(res.afc,addlabels=T,ncp =10)
##Visualiser la contribution des lignes et colonnes qui ont une contribution supérieure à la contribution moyenne sur l'axe 1.
rowcontrib1<-rownames(res.afc$row$contrib)[res.afc$row$contrib[,1]>100/nrow(tab)]
colcontrib1<-rownames(res.afc$col$contrib)[res.afc$col$contrib[,1]>100/ncol(tab)]
fviz_ca_biplot(res.afc,axes=c(1,2),
select.row = list(name = rowcontrib1),
select.col=list(name=colcontrib1))
data.frame(Axe1_cos2=sort(res.afc$col$cos2[,1],decreasing = T))
colcos1<-rownames(res.afc$col$cos2)[res.afc$col$cos2[,1]>.1]
fviz_ca_col(res.afc,axes=c(1,2),select.col=list(name=colcos1))
##Visualiser la contribution des lignes et colonnes qui ont une contribution supérieure à la contribution moyenne sur l'axe 2.
rowcontrib2<-rownames(res.afc$row$contrib)[res.afc$row$contrib[,2]>100/nrow(tab)]
colcontrib2<-rownames(res.afc$col$contrib)[res.afc$col$contrib[,2]>100/ncol(tab)]
fviz_ca_biplot(res.afc,axes=c(1,2),
select.row = list(name = rowcontrib2),
select.col=list(name=colcontrib2))
data.frame(Axe2_cos2=sort(res.afc$col$cos2[,2],decreasing = T))
colcos2<-rownames(res.afc$col$cos2)[res.afc$col$cos2[,2]>.1]
fviz_ca_col(res.afc,axes=c(1,2),select.col=list(name=colcos2))
fviz_ca_row(res.afc,axes=c(1,2),col.row="contrib",pointsize=1,labelsize=3)
#La coloration des départements en fonction de la contribution correspond à la contribution moyenne sur les axes 1 et 2
## Poids de chaque département
poids<-res.afc$call$marge.row
## Contribution à l'inertie de chaque département
contribution<-res.afc$row$inertia/sum(res.afc$row$inertia)
contribution
res.afc$row$inertia
res.afc$row
sum(res.afc$row$inertia)
res.afc$row$inertia
## Contribution à l'inertie de chaque département
contribution<-res.afc$row$inertia/sum(res.afc$row$inertia)
which.min(contribution)
## Poids de chaque département
poids<-res.afc$call$marge.row
## Contribution à l'inertie de chaque département
contribution<-res.afc$row$inertia/sum(res.afc$row$inertia)
## Ratio contribution poids
ratio<-contribution/poids
## On affiche directement la valeur minimale du ratio
which.min(ratio)
contribution
res.afc$row$inertia
poids
names(contribution)
names(contribution)<-row.names(tab)
contribution
which.min(contribution)
## Poids de chaque département
poids<-res.afc$call$marge.row
## Contribution à l'inertie de chaque département
contribution<-res.afc$row$inertia/sum(res.afc$row$inertia)
## Ratio contribution poids
ratio<-contribution/poids
## On affiche directement la valeur minimale du ratio
which.min(ratio)
##Si on n'avait pas tenu compte du poids :
names(contribution)<-row.names(tab)
which.min(contribution)
###Représentation spatiale des résultats
#On charge une base avec les coordonnées spatiales des départements (format shp)
library(sf)
##Pour zoomer sur l'ile de France
library(ggmapinset)
setwd("E:/Enseignements/Cours UVSQ/Année 2023-2024/L3 Sociologie Analyse des données/TD/TD6/Cartographie")
dep <- st_read("DEPARTEMENT.shp")
#On crée une base avec les coordonnées sur les trois premiers axes. On indique l'id du département avec le code dans tab
coordafc<-as.data.frame(cbind(tab$Code,res.afc$row$coord[,1:3]))
names(coordafc)<-c("Code","Dim1","Dim2","Dim3")
coordafc<-coordafc %>% mutate_at(vars(Dim1:Dim3),as.numeric)
#On ajoute des 0 pour les codes de département qui n'ont qu'un chiffre pour matcher avec la base de fond de carte
coordafc$Code<-ifelse(nchar(coordafc$Code)==1,paste0("0",coordafc$Code),coordafc$Code)
##On fait une jointure avec la base du fond de carte
dep2 <- dep %>% left_join(coordafc,by=c("CODE_DEPT"="Code"))
d1 <-  ggplot(dep2) +
geom_sf(aes(fill=Dim1),colour="darkgrey")+
scale_fill_viridis_c(option="C")+
theme_void()
d1
#| warning: false
###Représentation spatiale des résultats
#On charge une base avec les coordonnées spatiales des départements (format shp)
library(sf)
##Pour zoomer sur l'ile de France
library(ggmapinset)
setwd("E:/Enseignements/Cours UVSQ/Année 2023-2024/L3 Sociologie Analyse des données/TD/TD6/Cartographie")
dep <- st_read("DEPARTEMENT.shp")
#On crée une base avec les coordonnées sur les trois premiers axes. On indique l'id du département avec le code dans tab
coordafc<-as.data.frame(cbind(tab$Code,res.afc$row$coord[,1:3]))
names(coordafc)<-c("Code","Dim1","Dim2","Dim3")
coordafc<-coordafc %>% mutate_at(vars(Dim1:Dim3),as.numeric)
#On ajoute des 0 pour les codes de département qui n'ont qu'un chiffre pour matcher avec la base de fond de carte
coordafc$Code<-ifelse(nchar(coordafc$Code)==1,paste0("0",coordafc$Code),coordafc$Code)
##On fait une jointure avec la base du fond de carte
dep2 <- dep %>% left_join(coordafc,by=c("CODE_DEPT"="Code"))
d1 <-  ggplot(dep2) +
geom_sf(aes(fill=Dim1),colour="darkgrey")+
scale_fill_viridis_c(option="C")+
theme_void()
d1
#| warning: false
#| echo: false
###Représentation spatiale des résultats
#On charge une base avec les coordonnées spatiales des départements (format shp)
library(sf)
##Pour zoomer sur l'ile de France
library(ggmapinset)
setwd("E:/Enseignements/Cours UVSQ/Année 2023-2024/L3 Sociologie Analyse des données/TD/TD6/Cartographie")
dep <- st_read("DEPARTEMENT.shp")
#On crée une base avec les coordonnées sur les trois premiers axes. On indique l'id du département avec le code dans tab
coordafc<-as.data.frame(cbind(tab$Code,res.afc$row$coord[,1:3]))
names(coordafc)<-c("Code","Dim1","Dim2","Dim3")
coordafc<-coordafc %>% mutate_at(vars(Dim1:Dim3),as.numeric)
#On ajoute des 0 pour les codes de département qui n'ont qu'un chiffre pour matcher avec la base de fond de carte
coordafc$Code<-ifelse(nchar(coordafc$Code)==1,paste0("0",coordafc$Code),coordafc$Code)
##On fait une jointure avec la base du fond de carte
dep2 <- dep %>% left_join(coordafc,by=c("CODE_DEPT"="Code"))
d1 <-  ggplot(dep2) +
geom_sf(aes(fill=Dim1),colour="darkgrey")+
scale_fill_viridis_c(option="C")+
theme_void()
d1
#| warning: false
###Représentation spatiale des résultats
#On charge une base avec les coordonnées spatiales des départements (format shp)
library(sf)
##Pour zoomer sur l'ile de France
library(ggmapinset)
setwd("E:/Enseignements/Cours UVSQ/Année 2023-2024/L3 Sociologie Analyse des données/TD/TD6/Cartographie")
dep <- st_read("DEPARTEMENT.shp")
#On crée une base avec les coordonnées sur les trois premiers axes. On indique l'id du département avec le code dans tab
coordafc<-as.data.frame(cbind(tab$Code,res.afc$row$coord[,1:3]))
names(coordafc)<-c("Code","Dim1","Dim2","Dim3")
coordafc<-coordafc %>% mutate_at(vars(Dim1:Dim3),as.numeric)
#On ajoute des 0 pour les codes de département qui n'ont qu'un chiffre pour matcher avec la base de fond de carte
coordafc$Code<-ifelse(nchar(coordafc$Code)==1,paste0("0",coordafc$Code),coordafc$Code)
##On fait une jointure avec la base du fond de carte
dep2 <- dep %>% left_join(coordafc,by=c("CODE_DEPT"="Code"))
d1 <-  ggplot(dep2) +
geom_sf(aes(fill=Dim1),colour="darkgrey")+
scale_fill_viridis_c(option="C")+
theme_void()
d1
# Pour faire le zoom autour de Paris sur la carte:
inset_centre <- sf::st_centroid(sf::st_geometry(dep2)[dep2$NOM_DEPT == "PARIS"])
#La même carte avec le zoom autour de Paris:
d1<-ggplot(dep2) +
geom_sf_inset(aes(fill = Dim1),colour="darkgrey") +
geom_inset_frame() +
coord_sf_inset(inset = configure_inset(centre = inset_centre, scale = 2, units = "mi",
translation = c(400, 0), radius = 60))+
scale_fill_viridis_c(option="C")+
labs(fill="Dim.1 de l'AFC")+
theme_void()
d1
#La même carte en noir et gris
d1<-ggplot(dep2) +
geom_sf_inset(aes(fill = Dim1),colour="darkgrey") +
geom_inset_frame() +
coord_sf_inset(inset = configure_inset(centre = inset_centre, scale = 2, units = "mi",
translation = c(400, 0), radius = 60))+
scale_fill_gradient(low="black",high="white")+
labs(fill="Dim.1 de l'AFC")+
theme_void()
d1
#On calcule d'abord le pourcentage des votes en faveur de chaque candidat par departement
##On fait une jointure avec la base du fond de carte
tabprop<-as.data.frame(cbind(Code=tab$Code,tab[-1]/rowSums(tab[,-1])*100))
tabprop$Code<-ifelse(nchar(tabprop$Code)==1,paste0("0",tabprop$Code),tabprop$Code)
dep3 <- dep %>% left_join(tabprop,by=c("CODE_DEPT"="Code"))
macron<-ggplot(dep3) +
geom_sf_inset(aes(fill = Macron),colour="darkgrey") +
geom_inset_frame() +
coord_sf_inset(inset = configure_inset(centre = inset_centre, scale = 2, units = "mi",
translation = c(400, 0), radius = 60))+
scale_fill_viridis_c(option="C")+
labs(fill="Vote Macron")+
theme_void()
macron
lepen<-ggplot(dep3) +
geom_sf_inset(aes(fill = Le.Pen),colour="darkgrey") +
geom_inset_frame() +
coord_sf_inset(inset = configure_inset(centre = inset_centre, scale = 2, units = "mi",
translation = c(400, 0), radius = 60))+
scale_fill_viridis_c(option="C")+
labs(fill="Vote Macron")+
theme_void()
lepen
?scale_fill_viridis_c
#On calcule d'abord le pourcentage des votes en faveur de chaque candidat par departement
##On fait une jointure avec la base du fond de carte
tabprop<-as.data.frame(cbind(Code=tab$Code,tab[-1]/rowSums(tab[,-1])*100))
tabprop$Code<-ifelse(nchar(tabprop$Code)==1,paste0("0",tabprop$Code),tabprop$Code)
dep3 <- dep %>% left_join(tabprop,by=c("CODE_DEPT"="Code"))
macron<-ggplot(dep3) +
geom_sf_inset(aes(fill = Macron),colour="darkgrey") +
geom_inset_frame() +
coord_sf_inset(inset = configure_inset(centre = inset_centre, scale = 2, units = "mi",
translation = c(400, 0), radius = 60))+
scale_fill_viridis_c(option="C",direction =-1)+
labs(fill="Vote Macron")+
theme_void()
macron
lepen<-ggplot(dep3) +
geom_sf_inset(aes(fill = Le.Pen),colour="darkgrey") +
geom_inset_frame() +
coord_sf_inset(inset = configure_inset(centre = inset_centre, scale = 2, units = "mi",
translation = c(400, 0), radius = 60))+
scale_fill_viridis_c(option="C")+
labs(fill="Vote Le Pen")+
theme_void()
lepen
#On calcule d'abord le pourcentage des votes en faveur de chaque candidat par departement
##On fait une jointure avec la base du fond de carte
tabprop<-as.data.frame(cbind(Code=tab$Code,tab[-1]/rowSums(tab[,-1])*100))
tabprop$Code<-ifelse(nchar(tabprop$Code)==1,paste0("0",tabprop$Code),tabprop$Code)
dep3 <- dep %>% left_join(tabprop,by=c("CODE_DEPT"="Code"))
macron<-ggplot(dep3) +
geom_sf_inset(aes(fill = Macron),colour="darkgrey") +
geom_inset_frame() +
coord_sf_inset(inset = configure_inset(centre = inset_centre, scale = 2, units = "mi",
translation = c(400, 0), radius = 60))+
scale_fill_viridis_c(option="B",direction =-1)+
labs(fill="Vote Macron")+
theme_void()
macron
#On calcule d'abord le pourcentage des votes en faveur de chaque candidat par departement
##On fait une jointure avec la base du fond de carte
tabprop<-as.data.frame(cbind(Code=tab$Code,tab[-1]/rowSums(tab[,-1])*100))
tabprop$Code<-ifelse(nchar(tabprop$Code)==1,paste0("0",tabprop$Code),tabprop$Code)
dep3 <- dep %>% left_join(tabprop,by=c("CODE_DEPT"="Code"))
macron<-ggplot(dep3) +
geom_sf_inset(aes(fill = Macron),colour="darkgrey") +
geom_inset_frame() +
coord_sf_inset(inset = configure_inset(centre = inset_centre, scale = 2, units = "mi",
translation = c(400, 0), radius = 60))+
scale_fill_viridis_c(option="A",direction =-1)+
labs(fill="Vote Macron")+
theme_void()
macron
#On calcule d'abord le pourcentage des votes en faveur de chaque candidat par departement
##On fait une jointure avec la base du fond de carte
tabprop<-as.data.frame(cbind(Code=tab$Code,tab[-1]/rowSums(tab[,-1])*100))
tabprop$Code<-ifelse(nchar(tabprop$Code)==1,paste0("0",tabprop$Code),tabprop$Code)
dep3 <- dep %>% left_join(tabprop,by=c("CODE_DEPT"="Code"))
macron<-ggplot(dep3) +
geom_sf_inset(aes(fill = Macron),colour="darkgrey") +
geom_inset_frame() +
coord_sf_inset(inset = configure_inset(centre = inset_centre, scale = 2, units = "mi",
translation = c(400, 0), radius = 60))+
scale_fill_viridis_c(option="E",direction =-1)+
labs(fill="Vote Macron")+
theme_void()
macron
lepen<-ggplot(dep3) +
geom_sf_inset(aes(fill = Le.Pen),colour="darkgrey") +
geom_inset_frame() +
coord_sf_inset(inset = configure_inset(centre = inset_centre, scale = 2, units = "mi",
translation = c(400, 0), radius = 60))+
scale_fill_viridis_c(option="F")+
labs(fill="Vote Le Pen")+
theme_void()
lepen
lepen<-ggplot(dep3) +
geom_sf_inset(aes(fill = Le.Pen),colour="darkgrey") +
geom_inset_frame() +
coord_sf_inset(inset = configure_inset(centre = inset_centre, scale = 2, units = "mi",
translation = c(400, 0), radius = 60))+
scale_fill_viridis_c(option="G")+
labs(fill="Vote Le Pen")+
theme_void()
lepen
lepen<-ggplot(dep3) +
geom_sf_inset(aes(fill = Le.Pen),colour="darkgrey") +
geom_inset_frame() +
coord_sf_inset(inset = configure_inset(centre = inset_centre, scale = 2, units = "mi",
translation = c(400, 0), radius = 60))+
scale_fill_viridis_c(option="H")+
labs(fill="Vote Le Pen")+
theme_void()
lepen
lepen<-ggplot(dep3) +
geom_sf_inset(aes(fill = Le.Pen),colour="darkgrey") +
geom_inset_frame() +
coord_sf_inset(inset = configure_inset(centre = inset_centre, scale = 2, units = "mi",
translation = c(400, 0), radius = 60))+
scale_fill_viridis_c(option="I")+
labs(fill="Vote Le Pen")+
theme_void()
lepen
lepen<-ggplot(dep3) +
geom_sf_inset(aes(fill = Le.Pen),colour="darkgrey") +
geom_inset_frame() +
coord_sf_inset(inset = configure_inset(centre = inset_centre, scale = 2, units = "mi",
translation = c(400, 0), radius = 60))+
scale_fill_viridis_c(option="A")+
labs(fill="Vote Le Pen")+
theme_void()
lepen
lepen<-ggplot(dep3) +
geom_sf_inset(aes(fill = Le.Pen),colour="darkgrey") +
geom_inset_frame() +
coord_sf_inset(inset = configure_inset(centre = inset_centre, scale = 2, units = "mi",
translation = c(400, 0), radius = 60))+
scale_fill_viridis_c()+
labs(fill="Vote Le Pen")+
theme_void()
lepen
lepen<-ggplot(dep3) +
geom_sf_inset(aes(fill = Le.Pen),colour="darkgrey") +
geom_inset_frame() +
coord_sf_inset(inset = configure_inset(centre = inset_centre, scale = 2, units = "mi",
translation = c(400, 0), radius = 60))+
scale_fill_viridis_c(direction=-1)+
labs(fill="Vote Le Pen")+
theme_void()
lepen
#| warning: false
library(readr)
library(FactoMineR)
library(factoextra)
library(explor)
setwd("E:/Enseignements/Cours UVSQ/Année 2023-2024/L3 Sociologie Analyse des données/TD/TD7")
enq<-read_csv("TD7.csv")
View(enq)
?read_csv
enq<-subset(enq,-1)
enq<-enq[,c(2:22)]
View(enq)
write_csv("TD7.csv")
write_csv(enq, file="TD7.csv")
#| warning: false
library(readr)
library(FactoMineR)
library(factoextra)
library(explor)
setwd("E:/Enseignements/Cours UVSQ/Année 2023-2024/L3 Sociologie Analyse des données/TD/TD7")
enq<-read_csv("TD7.csv")
View(enq)
names(enq)
res.acm<-MCA(enq,quali.sup=c(1,4,5),graph=F)
explor(res.acm)
?subset
enq1<-subset(enq,select=c(csp,age,sexe,
assurvi,cableue,eparliv,interdit,duree,credcon,soldevu,oppo,credhab))
res.acm1<-MCA(enq1,quali.sup=c(1,2,3),graph=F)
explor(res.acm1)
res.acm1$eig
res.acm1$eig[,1]
res.acm1$var
res.acm1$var[,1]
explor(res.acm1)
library(GDAtools)
modif.rate(res.acm1)
